# Notes:
#
# Lint and test could be executed in parallel, but that would only make things slower.
# Other then that everything is sequentially dependent.
#
# By re-using a build command instead of requiring a build job before release
# we don't need to persist to a workspace which saves time.
#
# To get semantic-release working follow the steps below:
#
# Bitbucket repo settings:
# - User and group access:
#   - circleci group needs write access
# - Branch permissions:
#   - circleci group needs write access to release branches
#
# Circle CI project settings:
# - Environment Variables:
#   - Add NPM_TOKEN with value from exmachina-ci NPM user
# - Checkout SSH Keys:
#   - Add exmg-circleci user key as described here:
#     https://circleci.com/docs/2.0/gh-bb-integration/#creating-a-bitbucket-user-key
#
# Bitbucket exmg-circleci user settings:
# - SSH keys:
#   - Add public key created above
#
# Circle CI config file:
# - Add SSH key fingerprint created above to release job like below

version: 2.1

executors:
  default:
    docker:
      - image: circleci/node:12.12.0-browsers

commands:
  npm_install:
    steps:
      - restore_cache:
          key: node_modules-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: |
            if [ -d node_modules ]; then
              echo "Dependencies restored from cache already"
            else
              npm ci
            fi
      - save_cache:
          key: node_modules-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  build:
    steps:
      - checkout
      - npm_install
      - run: npm run build
      - run: npm run lint
      - run: npm test

jobs:
  build:
    executor: default
    steps:
      - build

  release:
    executor: default
    steps:
      - add_ssh_keys:
          fingerprints:
            - 'e2:f8:77:ef:73:f3:98:a4:7c:43:a8:ac:d6:28:1e:4b'
      - build
      - run: npx semantic-release

workflows:
  version: 2.1

  build_or_release:
    jobs:
      - build:
          filters:
            branches:
              ignore: [beta, master]
      - release:
          # For now we rely on project environment variable NPM_TOKEN and SSH key
          # context: org-global
          filters:
            branches:
              only: [beta, master]
